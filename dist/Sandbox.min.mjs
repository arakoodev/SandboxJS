import{Scope,sandboxFunction,sandboxedEval,sandboxedSetTimeout,sandboxedSetInterval,executeTree,executeTreeAsync}from"./executor.js";import{parse}from"./parser.js";export class SandboxGlobal{constructor(e){if(e===globalThis)return globalThis;for(let t in e)this[t]=e[t]}}export default class Sandbox{constructor(globals=Sandbox.SAFE_GLOBALS,prototypeWhitelist=Sandbox.SAFE_PROTOTYPES,prototypeReplacements=new Map,options={audit:!1}){const sandboxGlobal=new SandboxGlobal(globals);this.context={sandbox:this,globals:globals,prototypeWhitelist:prototypeWhitelist,prototypeReplacements:prototypeReplacements,globalsWhitelist:new Set(Object.values(globals)),options:options,globalScope:new Scope(null,globals,sandboxGlobal),sandboxGlobal:sandboxGlobal,evals:new Map,getSubscriptions:new Set,setSubscriptions:new WeakMap,changeSubscriptions:new WeakMap,inLoop:!1};const func=sandboxFunction(this.context);this.context.evals.set(Function,func),this.context.evals.set(eval,sandboxedEval(func)),this.context.evals.set(setTimeout,sandboxedSetTimeout(func)),this.context.evals.set(setInterval,sandboxedSetInterval(func))}static get SAFE_GLOBALS(){return{Function:Function,console:{debug:console.debug,error:console.error,info:console.info,log:console.log,table:console.table,warn:console.warn},isFinite:isFinite,isNaN:isNaN,parseFloat:parseFloat,parseInt:parseInt,decodeURI:decodeURI,decodeURIComponent:decodeURIComponent,encodeURI:encodeURI,encodeURIComponent:encodeURIComponent,escape:escape,unescape:unescape,Boolean:Boolean,Number:Number,String:String,Object:Object,Array:Array,Symbol:Symbol,Error:Error,EvalError:EvalError,RangeError:RangeError,ReferenceError:ReferenceError,SyntaxError:SyntaxError,TypeError:TypeError,URIError:URIError,Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,Map:Map,Set:Set,WeakMap:WeakMap,WeakSet:WeakSet,Promise:Promise,Intl:Intl,JSON:JSON,Math:Math,Date:Date}}static get SAFE_PROTOTYPES(){let e=[SandboxGlobal,Function,Boolean,Number,String,Date,RegExp,Error,Array,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,Map,Set,WeakMap,WeakSet,Promise,Symbol,Date],t=new Map;return e.forEach(e=>{t.set(e,new Set)}),t.set(Object,new Set(["entries","fromEntries","getOwnPropertyNames","is","keys","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf","values"])),t}subscribeGet(e){return this.context.getSubscriptions.add(e),{unsubscribe:()=>this.context.getSubscriptions.delete(e)}}subscribeSet(e,t,r){const o=this.context.setSubscriptions.get(e)||new Map;this.context.setSubscriptions.set(e,o);const n=o.get(t)||new Set;let a;return o.set(t,n),n.add(r),e&&e[t]&&"object"==typeof e[t]&&(a=this.context.changeSubscriptions.get(e[t])||new Set,a.add(r),this.context.changeSubscriptions.set(e[t],a)),{unsubscribe:()=>{n.delete(r),a&&a.delete(r)}}}static audit(e,t=[]){return new Sandbox(globalThis,new Map,new Map,{audit:!0}).executeTree(parse(e),t)}static parse(e){return parse(e)}executeTree(e,t=[]){return executeTree(this.context,e,t)}executeTreeAsync(e,t=[]){return executeTreeAsync(this.context,e,t)}compile(e){const t=parse(e);return(...e)=>this.executeTree(t,e).result}compileAsync(e){const t=parse(e);return async(...e)=>(await this.executeTreeAsync(t,e)).result}}