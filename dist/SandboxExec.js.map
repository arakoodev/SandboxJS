{"version":3,"file":"SandboxExec.js","sources":["../src/SandboxExec.ts"],"sourcesContent":["import { IEvalContext } from \"./eval.js\";\nimport { \n  Change, \n  ExecReturn,\n  executeTree,\n  executeTreeAsync,\n} from \"./executor.js\";\nimport { createContext, IContext, IExecContext, IGlobals, IOptionParams, IOptions, IScope, replacementCallback, SandboxGlobal, SubscriptionSubject } from \"./utils.js\";\n\nfunction subscribeSet(obj: unknown, name: string, callback: (modification: Change) => void, context: {\n  setSubscriptions: WeakMap<SubscriptionSubject, Map<string, Set<(modification: Change) => void>>>, \n  changeSubscriptions: WeakMap<SubscriptionSubject, Set<(modification: Change) => void>>\n}): {unsubscribe: () => void} {\n  if (!(obj instanceof Object)) throw new Error('Invalid subscription object, got ' + (typeof obj === 'object' ? 'null' : typeof obj))\n  const names = context.setSubscriptions.get(obj) || new Map<string, Set<(modification: Change) => void>>();\n  context.setSubscriptions.set(obj, names);\n  const callbacks = names.get(name) || new Set();\n  names.set(name, callbacks);\n  callbacks.add(callback);\n  let changeCbs: Set<(modification: Change) => void>;\n  const val = (obj as any)[name] as unknown;\n  if (val instanceof Object) {\n    changeCbs = context.changeSubscriptions.get(val) || new Set();\n    changeCbs.add(callback);\n    context.changeSubscriptions.set(val, changeCbs);\n  }\n  return {\n    unsubscribe: () => {\n      callbacks.delete(callback);\n      changeCbs?.delete(callback);\n    }\n  }\n}\n\nexport default class SandboxExec {\n  context: IContext;\n  setSubscriptions: WeakMap<SubscriptionSubject, Map<string, Set<(modification: Change) => void>>> = new WeakMap();\n  changeSubscriptions: WeakMap<SubscriptionSubject, Set<(modification: Change) => void>> = new WeakMap();\n  sandboxFunctions: WeakMap<(...args: any[]) => any, IExecContext> = new WeakMap();\n  constructor(options?: IOptionParams, public evalContext?: IEvalContext) {\n    const opt: IOptions = Object.assign({\n      audit: false,\n      forbidFunctionCalls: false,\n      forbidFunctionCreation: false,\n      globals: SandboxExec.SAFE_GLOBALS,\n      prototypeWhitelist: SandboxExec.SAFE_PROTOTYPES, \n      prototypeReplacements: new Map<new() => any, replacementCallback>(),\n    }, options || {});\n    this.context = createContext(this, opt, evalContext)\n  }\n\n  static get SAFE_GLOBALS(): IGlobals {\n    return {\n      Function,\n      console: {\n        debug: console.debug, \n        error: console.error, \n        info: console.info, \n        log: console.log, \n        table: console.table, \n        warn: console.warn\n      },\n      isFinite,\n      isNaN,\n      parseFloat,\n      parseInt,\n      decodeURI,\n      decodeURIComponent,\n      encodeURI,\n      encodeURIComponent,\n      escape,\n      unescape,\n      Boolean,\n      Number,\n      BigInt,\n      String,\n      Object,\n      Array,\n      Symbol,\n      Error,\n      EvalError,\n      RangeError,\n      ReferenceError,\n      SyntaxError,\n      TypeError,\n      URIError,\n      Int8Array,\n      Uint8Array,\n      Uint8ClampedArray,\n      Int16Array,\n      Uint16Array,\n      Int32Array,\n      Uint32Array,\n      Float32Array,\n      Float64Array,\n      Map,\n      Set,\n      WeakMap,\n      WeakSet,\n      Promise,\n      Intl,\n      JSON,\n      Math,\n      Date,\n      RegExp\n    }\n  }\n\n  \n  static get SAFE_PROTOTYPES(): Map<any, Set<string>> {\n    let protos = [\n      SandboxGlobal,\n      Function,\n      Boolean,\n      Number,\n      BigInt,\n      String,\n      Date,\n      Error,\n      Array,\n      Int8Array,\n      Uint8Array,\n      Uint8ClampedArray,\n      Int16Array,\n      Uint16Array,\n      Int32Array,\n      Uint32Array,\n      Float32Array,\n      Float64Array,\n      Map,\n      Set,\n      WeakMap,\n      WeakSet,\n      Promise,\n      Symbol,\n      Date,\n      RegExp\n    ]\n    let map = new Map<any, Set<string>>();\n    protos.forEach((proto) => {\n      map.set(proto, new Set());\n    });\n    map.set(Object, new Set([\n      'entries',\n      'fromEntries',\n      'getOwnPropertyNames',\n      'is',\n      'keys',\n      'hasOwnProperty',\n      'isPrototypeOf',\n      'propertyIsEnumerable',\n      'toLocaleString',\n      'toString',\n      'valueOf',\n      'values'\n    ]));\n    return map;\n  }\n\n  subscribeGet(callback: (obj: SubscriptionSubject, name: string) => void, context: IExecContext): {unsubscribe: () => void} {\n    context.getSubscriptions.add(callback);\n    return {unsubscribe: () => context.getSubscriptions.delete(callback)}\n  }\n\n  subscribeSet(obj: object, name: string, callback: (modification: Change) => void, context: SandboxExec|IExecContext): {unsubscribe: () => void} {\n    return subscribeSet(obj, name, callback, context);\n  }\n\n  subscribeSetGlobal(obj: SubscriptionSubject, name: string, callback: (modification: Change) => void): {unsubscribe: () => void} {\n    return subscribeSet(obj, name, callback, this);\n  }\n\n  getContext(fn: (...args: any[]) => any) {\n    return this.sandboxFunctions.get(fn);\n  }\n\n  executeTree<T>(context: IExecContext, scopes: (IScope)[] = []): ExecReturn<T> {\n    return executeTree({\n      ticks: BigInt(0),\n    }, context, context.tree, scopes);\n  }\n\n  executeTreeAsync<T>(context: IExecContext, scopes: (IScope)[] = []): Promise<ExecReturn<T>> {\n    return executeTreeAsync({\n      ticks: BigInt(0),\n    }, context, context.tree, scopes);\n  }\n}\n"],"names":[],"mappings":"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"}